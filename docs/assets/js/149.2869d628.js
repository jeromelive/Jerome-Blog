(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{397:function(e,s,t){"use strict";t.r(s);var a=t(43),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"version-4-0-0-2018-01-28"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-4-0-0-2018-01-28"}},[e._v("#")]),e._v(" Version 4.0.0 (2018-01-28)")]),e._v(" "),t("ul",[t("li",[e._v("Added: Support for ES2018. The only change needed was recognizing the "),t("code",[e._v("s")]),e._v("\nregex flag.")]),e._v(" "),t("li",[e._v("Changed: "),t("em",[e._v("All")]),e._v(" tokens returned by the "),t("code",[e._v("matchToToken")]),e._v(" function now have a\n"),t("code",[e._v("closed")]),e._v(" property. It is set to "),t("code",[e._v("undefined")]),e._v(" for the tokens where “closed”\ndoesn’t make sense. This means that all tokens objects have the same shape,\nwhich might improve performance.")])]),e._v(" "),t("p",[e._v("These are the breaking changes:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'/a/s'.match(jsTokens)")]),e._v(" no longer returns "),t("code",[e._v("['/', 'a', '/', 's']")]),e._v(", but\n"),t("code",[e._v("['/a/s']")]),e._v(". (There are of course other variations of this.)")]),e._v(" "),t("li",[e._v("Code that rely on some token objects not having the "),t("code",[e._v("closed")]),e._v(" property could\nnow behave differently.")])]),e._v(" "),t("h3",{attrs:{id:"version-3-0-2-2017-06-28"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-3-0-2-2017-06-28"}},[e._v("#")]),e._v(" Version 3.0.2 (2017-06-28)")]),e._v(" "),t("ul",[t("li",[e._v("No code changes. Just updates to the readme.")])]),e._v(" "),t("h3",{attrs:{id:"version-3-0-1-2017-01-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-3-0-1-2017-01-30"}},[e._v("#")]),e._v(" Version 3.0.1 (2017-01-30)")]),e._v(" "),t("ul",[t("li",[e._v("Fixed: ES2015 unicode escapes with more than 6 hex digits are now matched\ncorrectly.")])]),e._v(" "),t("h3",{attrs:{id:"version-3-0-0-2017-01-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-3-0-0-2017-01-11"}},[e._v("#")]),e._v(" Version 3.0.0 (2017-01-11)")]),e._v(" "),t("p",[e._v("This release contains one breaking change, that should "),t("a",{attrs:{href:"http://v8project.blogspot.se/2017/01/speeding-up-v8-regular-expressions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("improve performance in\nV8"),t("OutboundLink")],1),e._v(":")]),e._v(" "),t("blockquote",[t("p",[e._v("So how can you, as a JavaScript developer, ensure that your RegExps are fast?\nIf you are not interested in hooking into RegExp internals, make sure that\nneither the RegExp instance, nor its prototype is modified in order to get the\nbest performance:")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" re "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[e._v("/./g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nre"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Fast path.")]),e._v("\nre"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("new_property "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'slow'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])])]),e._v(" "),t("p",[e._v("This module used to export a single regex, with "),t("code",[e._v(".matchToToken")]),e._v(" bolted\non, just like in the above example. This release changes the exports of\nthe module to avoid this issue.")]),e._v(" "),t("p",[e._v("Before:")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" jsTokens "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"js-tokens"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// or:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" jsTokens "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"js-tokens"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" matchToToken "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" jsTokens"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("matchToToken\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("After:")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" jsTokens"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("matchToToken"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"js-tokens"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// or:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" jsTokens "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"js-tokens"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("default\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" matchToToken "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"js-tokens"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("matchToToken\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h3",{attrs:{id:"version-2-0-0-2016-06-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-2-0-0-2016-06-19"}},[e._v("#")]),e._v(" Version 2.0.0 (2016-06-19)")]),e._v(" "),t("ul",[t("li",[e._v("Added: Support for ES2016. In other words, support for the "),t("code",[e._v("**")]),e._v(" exponentiation\noperator.")])]),e._v(" "),t("p",[e._v("These are the breaking changes:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'**'.match(jsTokens)")]),e._v(" no longer returns "),t("code",[e._v("['*', '*']")]),e._v(", but "),t("code",[e._v("['**']")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("'**='.match(jsTokens)")]),e._v(" no longer returns "),t("code",[e._v("['*', '*=']")]),e._v(", but "),t("code",[e._v("['**=']")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"version-1-0-3-2016-03-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-1-0-3-2016-03-27"}},[e._v("#")]),e._v(" Version 1.0.3 (2016-03-27)")]),e._v(" "),t("ul",[t("li",[e._v("Improved: Made the regex ever so slightly smaller.")]),e._v(" "),t("li",[e._v("Updated: The readme.")])]),e._v(" "),t("h3",{attrs:{id:"version-1-0-2-2015-10-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-1-0-2-2015-10-18"}},[e._v("#")]),e._v(" Version 1.0.2 (2015-10-18)")]),e._v(" "),t("ul",[t("li",[e._v("Improved: Limited npm package contents for a smaller download. Thanks to\n@zertosh!")])]),e._v(" "),t("h3",{attrs:{id:"version-1-0-1-2015-06-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-1-0-1-2015-06-20"}},[e._v("#")]),e._v(" Version 1.0.1 (2015-06-20)")]),e._v(" "),t("ul",[t("li",[e._v("Fixed: Declared an undeclared variable.")])]),e._v(" "),t("h3",{attrs:{id:"version-1-0-0-2015-02-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-1-0-0-2015-02-26"}},[e._v("#")]),e._v(" Version 1.0.0 (2015-02-26)")]),e._v(" "),t("ul",[t("li",[e._v("Changed: Merged the 'operator' and 'punctuation' types into 'punctuator'. That\ntype is now equivalent to the Punctuator token in the ECMAScript\nspecification. (Backwards-incompatible change.)")]),e._v(" "),t("li",[e._v("Fixed: A "),t("code",[e._v("-")]),e._v(" followed by a number is now correctly matched as a punctuator\nfollowed by a number. It used to be matched as just a number, but there is no\nsuch thing as negative number literals. (Possibly backwards-incompatible\nchange.)")])]),e._v(" "),t("h3",{attrs:{id:"version-0-4-1-2015-02-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-4-1-2015-02-21"}},[e._v("#")]),e._v(" Version 0.4.1 (2015-02-21)")]),e._v(" "),t("ul",[t("li",[e._v("Added: Support for the regex "),t("code",[e._v("u")]),e._v(" flag.")])]),e._v(" "),t("h3",{attrs:{id:"version-0-4-0-2015-02-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-4-0-2015-02-21"}},[e._v("#")]),e._v(" Version 0.4.0 (2015-02-21)")]),e._v(" "),t("ul",[t("li",[e._v("Improved: "),t("code",[e._v("jsTokens.matchToToken")]),e._v(" performance.")]),e._v(" "),t("li",[e._v("Added: Support for octal and binary number literals.")]),e._v(" "),t("li",[e._v("Added: Support for template strings.")])]),e._v(" "),t("h3",{attrs:{id:"version-0-3-1-2015-01-06"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-3-1-2015-01-06"}},[e._v("#")]),e._v(" Version 0.3.1 (2015-01-06)")]),e._v(" "),t("ul",[t("li",[e._v("Fixed: Support for unicode spaces. They used to be allowed in names (which is\nvery confusing), and some unicode newlines were wrongly allowed in strings and\nregexes.")])]),e._v(" "),t("h3",{attrs:{id:"version-0-3-0-2014-12-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-3-0-2014-12-19"}},[e._v("#")]),e._v(" Version 0.3.0 (2014-12-19)")]),e._v(" "),t("ul",[t("li",[e._v("Changed: The "),t("code",[e._v("jsTokens.names")]),e._v(" array has been replaced with the\n"),t("code",[e._v("jsTokens.matchToToken")]),e._v(" function. The capturing groups of "),t("code",[e._v("jsTokens")]),e._v(" are no\nlonger part of the public API; instead use said function. See this "),t("a",{attrs:{href:"https://gist.github.com/lydell/be49dbf80c382c473004",target:"_blank",rel:"noopener noreferrer"}},[e._v("gist"),t("OutboundLink")],1),e._v(" for\nan example. (Backwards-incompatible change.)")]),e._v(" "),t("li",[e._v("Changed: The empty string is now considered an “invalid” token, instead an\n“empty” token (its own group). (Backwards-incompatible change.)")]),e._v(" "),t("li",[e._v("Removed: component support. (Backwards-incompatible change.)")])]),e._v(" "),t("h3",{attrs:{id:"version-0-2-0-2014-06-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-2-0-2014-06-19"}},[e._v("#")]),e._v(" Version 0.2.0 (2014-06-19)")]),e._v(" "),t("ul",[t("li",[e._v("Changed: Match ES6 function arrows ("),t("code",[e._v("=>")]),e._v(") as an operator, instead of its own\ncategory (“functionArrow”), for simplicity. (Backwards-incompatible change.)")]),e._v(" "),t("li",[e._v("Added: ES6 splats ("),t("code",[e._v("...")]),e._v(") are now matched as an operator (instead of three\npunctuations). (Backwards-incompatible change.)")])]),e._v(" "),t("h3",{attrs:{id:"version-0-1-0-2014-03-08"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-0-1-0-2014-03-08"}},[e._v("#")]),e._v(" Version 0.1.0 (2014-03-08)")]),e._v(" "),t("ul",[t("li",[e._v("Initial release.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);