(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{384:function(t,a,s){"use strict";s.r(a);var r=s(43),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-知识点"}},[t._v("#")]),t._v(" JavaScript 知识点")]),t._v(" "),s("h2",{attrs:{id:"_1-介绍一下-js-的数据类型有哪些-值是如何存储的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍一下-js-的数据类型有哪些-值是如何存储的"}},[t._v("#")]),t._v(" 1. 介绍一下 js 的数据类型有哪些,值是如何存储的")]),t._v(" "),s("p",[t._v("JavaScript 共有 8 种数据类型，JavaScript不支持任何创建自定义类型的机制，而所有值最终都将是以下 8 种数据类型之一。")]),t._v(" "),s("ul",[s("li",[t._v("7 种基本数据类型，"),s("code",[t._v("undefined")]),t._v("、"),s("code",[t._v("null")]),t._v("、"),s("code",[t._v("Number")]),t._v("、"),s("code",[t._v("String")]),t._v("、"),s("code",[t._v("Boolean")]),t._v("、"),s("code",[t._v("Symbol")]),t._v("、"),s("code",[t._v("BigInt")])]),t._v(" "),s("li",[t._v("1 种引用数据类型，"),s("code",[t._v("Object")]),t._v("。其中包含 "),s("code",[t._v("function")]),t._v("、"),s("code",[t._v("Array")]),t._v("、"),s("code",[t._v("Date")]),t._v("等。")])]),t._v(" "),s("p",[t._v("JavaScript 数据类型存储方式")]),t._v(" "),s("ul",[s("li",[t._v("原始数据类型：直接存储在栈"),s("code",[t._v("（stack）")]),t._v("中，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储。")]),t._v(" "),s("li",[t._v("引用数据类型：同时存储在栈"),s("code",[t._v("（stack）")]),t._v("和堆"),s("code",[t._v("（heap）")]),t._v("中，占据空间大、大小不固定。引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。")])]),t._v(" "),s("h2",{attrs:{id:"_2-、-和-运算符分别能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-、-和-运算符分别能做什么"}},[t._v("#")]),t._v(" 2. "),s("code",[t._v("&&")]),t._v(" 、 "),s("code",[t._v("||")]),t._v("和"),s("code",[t._v("!!")]),t._v(" 运算符分别能做什么")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("&&")]),t._v("  叫逻辑与，在其操作数中找到第一个虚值表达式并返回它，如果没有找到任何虚值表达式，则返回最后一个真值表达式。它采用短路来防止不必要的工作。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不打印东西")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("- "),s("code",[t._v("||")]),t._v(" 叫逻辑或，在其操作数中找到第一个真值表达式并返回它。这也使用了短路来防止不必要的工作。在支持 ES6 默认函数参数之前，它用于初始化函数中的默认参数值。")])])]),t._v(" "),s("tbody")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jerome'")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jerome")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pig'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pig")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("!!")]),t._v(" 运算符可以将右侧的值强制转换为布尔值，这也是将值转换为布尔值的一种简单方法。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_3-js的数据类型的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-js的数据类型的转换"}},[t._v("#")]),t._v(" 3. js的数据类型的转换")]),t._v(" "),s("h2",{attrs:{id:"_4-js-中数据类型的判断（-typeof，instanceof，constructor，object-prototype-tostring-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-js-中数据类型的判断（-typeof，instanceof，constructor，object-prototype-tostring-call"}},[t._v("#")]),t._v(" 4. js 中数据类型的判断（ typeof，instanceof，constructor，Object.prototype.toString.call()")]),t._v(" "),s("h2",{attrs:{id:"_5-介绍-js-有哪些内置对象？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍-js-有哪些内置对象？"}},[t._v("#")]),t._v(" 5. 介绍 js 有哪些内置对象？")]),t._v(" "),s("h2",{attrs:{id:"_6-undefined-与-undeclared-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-undefined-与-undeclared-的区别？"}},[t._v("#")]),t._v(" 6. undefined 与 undeclared 的区别？")]),t._v(" "),s("h2",{attrs:{id:"_7-null-和-undefined-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-null-和-undefined-的区别？"}},[t._v("#")]),t._v(" 7. null 和 undefined 的区别？")]),t._v(" "),s("h2",{attrs:{id:"_8-和-的-valueof-和-tostring-的结果是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-和-的-valueof-和-tostring-的结果是什么？"}},[t._v("#")]),t._v(" 8. {} 和 [] 的 valueOf 和 toString 的结果是什么？")]),t._v(" "),s("h2",{attrs:{id:"_9-javascript-的作用域和作用域链？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-javascript-的作用域和作用域链？"}},[t._v("#")]),t._v(" 9. Javascript 的作用域和作用域链？")]),t._v(" "),s("h2",{attrs:{id:"_10-javascript-创建对象的几种方式？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-javascript-创建对象的几种方式？"}},[t._v("#")]),t._v(" 10. javascript 创建对象的几种方式？")]),t._v(" "),s("h2",{attrs:{id:"_11-javascript-继承的几种实现方式？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-javascript-继承的几种实现方式？"}},[t._v("#")]),t._v(" 11. JavaScript 继承的几种实现方式？")]),t._v(" "),s("h2",{attrs:{id:"_12-寄生式组合继承的实现？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-寄生式组合继承的实现？"}},[t._v("#")]),t._v(" 12. 寄生式组合继承的实现？")]),t._v(" "),s("h2",{attrs:{id:"_13-谈谈你对this、call、apply和bind的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-谈谈你对this、call、apply和bind的理解"}},[t._v("#")]),t._v(" 13. 谈谈你对this、call、apply和bind的理解")]),t._v(" "),s("h2",{attrs:{id:"_14-javascript-原型，原型链？有什么特点？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-javascript-原型，原型链？有什么特点？"}},[t._v("#")]),t._v(" 14. JavaScript 原型，原型链？有什么特点？")]),t._v(" "),s("h2",{attrs:{id:"_15-js-获取原型的方法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-js-获取原型的方法？"}},[t._v("#")]),t._v(" 15. js 获取原型的方法？")]),t._v(" "),s("h2",{attrs:{id:"_16-什么是闭包，为什么要用它？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-什么是闭包，为什么要用它？"}},[t._v("#")]),t._v(" 16. 什么是闭包，为什么要用它？")]),t._v(" "),s("h2",{attrs:{id:"_17-什么是-dom-和-bom？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-什么是-dom-和-bom？"}},[t._v("#")]),t._v(" 17. 什么是 DOM 和 BOM？")]),t._v(" "),s("h2",{attrs:{id:"_18-三种事件模型是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-三种事件模型是什么？"}},[t._v("#")]),t._v(" 18. 三种事件模型是什么？")]),t._v(" "),s("h2",{attrs:{id:"_19-事件委托是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-事件委托是什么？"}},[t._v("#")]),t._v(" 19. 事件委托是什么？")]),t._v(" "),s("h2",{attrs:{id:"_20-什么是事件传播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-什么是事件传播"}},[t._v("#")]),t._v(" 20. 什么是事件传播?")]),t._v(" "),s("h2",{attrs:{id:"_21-什么是事件捕获？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-什么是事件捕获？"}},[t._v("#")]),t._v(" 21. 什么是事件捕获？")]),t._v(" "),s("h2",{attrs:{id:"_22-什么是事件冒泡？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-什么是事件冒泡？"}},[t._v("#")]),t._v(" 22. 什么是事件冒泡？")]),t._v(" "),s("h2",{attrs:{id:"_23-dom-操作-怎样添加、移除、移动、复制、创建和查找节点？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-dom-操作-怎样添加、移除、移动、复制、创建和查找节点？"}},[t._v("#")]),t._v(" 23. DOM 操作——怎样添加、移除、移动、复制、创建和查找节点？")]),t._v(" "),s("h2",{attrs:{id:"_24-js数组和对象有哪些原生方法-列举一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-js数组和对象有哪些原生方法-列举一下"}},[t._v("#")]),t._v(" 24. js数组和对象有哪些原生方法,列举一下")]),t._v(" "),s("h2",{attrs:{id:"_25-常用的正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-常用的正则表达式"}},[t._v("#")]),t._v(" 25. 常用的正则表达式")]),t._v(" "),s("h2",{attrs:{id:"_26-ajax-是什么-如何创建一个-ajax？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-ajax-是什么-如何创建一个-ajax？"}},[t._v("#")]),t._v(" 26. Ajax 是什么? 如何创建一个 Ajax？")]),t._v(" "),s("h2",{attrs:{id:"_27-js-延迟加载的方式有哪些？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-js-延迟加载的方式有哪些？"}},[t._v("#")]),t._v(" 27. js 延迟加载的方式有哪些？")]),t._v(" "),s("h2",{attrs:{id:"_28-谈谈你对模块化开发的理解？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-谈谈你对模块化开发的理解？"}},[t._v("#")]),t._v(" 28. 谈谈你对模块化开发的理解？")]),t._v(" "),s("h2",{attrs:{id:"_29-js-的几种模块规范？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-js-的几种模块规范？"}},[t._v("#")]),t._v(" 29. js 的几种模块规范？")]),t._v(" "),s("h2",{attrs:{id:"_30-amd和cmd-规范的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-amd和cmd-规范的区别？"}},[t._v("#")]),t._v(" 30. AMD和CMD 规范的区别？")]),t._v(" "),s("h2",{attrs:{id:"_31-es6-模块与-commonjs-模块、amd、cmd-的差异。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-es6-模块与-commonjs-模块、amd、cmd-的差异。"}},[t._v("#")]),t._v(" 31. ES6 模块与 CommonJS 模块、AMD、CMD 的差异。")]),t._v(" "),s("h2",{attrs:{id:"_32-requirejs的核心原理是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-requirejs的核心原理是什么？"}},[t._v("#")]),t._v(" 32.   requireJS的核心原理是什么？")]),t._v(" "),s("h2",{attrs:{id:"_33-谈谈js的运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-谈谈js的运行机制"}},[t._v("#")]),t._v(" 33. 谈谈JS的运行机制")]),t._v(" "),s("h2",{attrs:{id:"_34-arguments-的对象是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-arguments-的对象是什么？"}},[t._v("#")]),t._v(" 34. arguments 的对象是什么？")]),t._v(" "),s("h2",{attrs:{id:"_35-为什么在调用这个函数时，代码中的b会变成一个全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-为什么在调用这个函数时，代码中的b会变成一个全局变量"}},[t._v("#")]),t._v(" 35. 为什么在调用这个函数时，代码中的"),s("code",[t._v("b")]),t._v("会变成一个全局变量?")]),t._v(" "),s("h2",{attrs:{id:"_36-简单介绍一下v8引擎的垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-简单介绍一下v8引擎的垃圾回收机制"}},[t._v("#")]),t._v(" 36. 简单介绍一下V8引擎的垃圾回收机制")]),t._v(" "),s("h2",{attrs:{id:"_37-哪些操作会造成内存泄漏？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-哪些操作会造成内存泄漏？"}},[t._v("#")]),t._v(" 37. 哪些操作会造成内存泄漏？")]),t._v(" "),s("h2",{attrs:{id:"_38-ecmascript-是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38-ecmascript-是什么？"}},[t._v("#")]),t._v(" 38. ECMAScript 是什么？")]),t._v(" "),s("h2",{attrs:{id:"_39-ecmascript-2015（es6）有哪些新特性？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_39-ecmascript-2015（es6）有哪些新特性？"}},[t._v("#")]),t._v(" 39. ECMAScript 2015（ES6）有哪些新特性？")]),t._v(" "),s("h2",{attrs:{id:"_40-var-let和const的区别是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_40-var-let和const的区别是什么？"}},[t._v("#")]),t._v(" 40. "),s("code",[t._v("var")]),t._v(","),s("code",[t._v("let")]),t._v("和"),s("code",[t._v("const")]),t._v("的区别是什么？")]),t._v(" "),s("h2",{attrs:{id:"_41-什么是箭头函数？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_41-什么是箭头函数？"}},[t._v("#")]),t._v(" 41. 什么是箭头函数？")]),t._v(" "),s("h2",{attrs:{id:"_42-什么是类？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_42-什么是类？"}},[t._v("#")]),t._v(" 42. 什么是类？")]),t._v(" "),s("h2",{attrs:{id:"_43-什么是模板字符串？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_43-什么是模板字符串？"}},[t._v("#")]),t._v(" 43. 什么是模板字符串？")]),t._v(" "),s("h2",{attrs:{id:"_44-什么是对象解构？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_44-什么是对象解构？"}},[t._v("#")]),t._v(" 44. 什么是对象解构？")]),t._v(" "),s("h2",{attrs:{id:"_45-什么是set对象，它是如何工作的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_45-什么是set对象，它是如何工作的？"}},[t._v("#")]),t._v(" 45. 什么是"),s("code",[t._v("Set")]),t._v("对象，它是如何工作的？")]),t._v(" "),s("h2",{attrs:{id:"_46-什么是proxy？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_46-什么是proxy？"}},[t._v("#")]),t._v(" 46. 什么是Proxy？")])])}),[],!1,null,null,null);a.default=e.exports}}]);