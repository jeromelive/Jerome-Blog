(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{387:function(t,s,a){"use strict";a.r(s);var e=a(43),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-常用操作"}},[t._v("#")]),t._v(" git 常用操作")]),t._v(" "),a("h2",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('git stash save "message"')]),t._v("：执行存储时，添加备注，方便查找，"),a("code",[t._v("git stash")]),t._v(" 也可以，但是没有备注信息")]),t._v(" "),a("li",[a("code",[t._v("git stash list")]),t._v("：查看 "),a("code",[t._v("stash")]),t._v(" 存储")]),t._v(" "),a("li",[a("code",[t._v("git stash apply")]),t._v("：引用某个存储，但不会把存储从存储列表中删除，默认使用第一个存储，即 "),a("code",[t._v("stash@{0}")]),t._v("，如果要使用其他，"),a("code",[t._v("git stash apply stash@{$num}")]),t._v("，比如第二个："),a("code",[t._v("git stash apply stash@{1}")])]),t._v(" "),a("li",[a("code",[t._v("git stash drop stash@{$num}")]),t._v("：删除 "),a("code",[t._v("stash@{$num}")]),t._v(" 存储")]),t._v(" "),a("li",[a("code",[t._v("git stash clear")]),t._v("：删除所有缓存的 "),a("code",[t._v("stash")])])]),t._v(" "),a("h2",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git reset --soft HEAD")]),t._v("：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可")]),t._v(" "),a("li",[a("code",[t._v("git reset --hard HEAD")]),t._v("：彻底回退到某个版本，本地的源码也会变为上一个版本的内容，撤销的commit中所包含的更改被冲掉")])])])}),[],!1,null,null,null);s.default=i.exports}}]);